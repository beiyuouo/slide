import{w as r}from"./modules/unplugin-icons-D9Tg0CH2.js";import{o as a,c as i,k as _,e as t,a1 as e,l,g as p,q as c,s as m,B as o}from"./modules/vue-Dim-dygt.js";import{I as d}from"./slidev/default-D-V2YAf6.js";import{b as u,I as s}from"./index-GjFdxGIJ.js";import{p as f,u as g,f as h}from"./slidev/context-B-08xyCf.js";import"./modules/shiki-D5uTpyAc.js";const x="/slide/optimization-in-deep-learning/assets/output_optimization-intro_70d214_33_1.svg",v=t("h2",null,"Optimization Problem & Deep Learning",-1),w=t("p",null,"深度学习中优化函数：损失函数 -> 最小化的目标函数",-1),z=t("p",null,[e("由于优化算法的目标函数通常是基于训练数据集的损失函数，因此优化的目标是减少"),t("strong",null,"训练误差"),e("，但其实我们希望的是减少"),t("strong",null,"泛化误差"),e("，也就是在验证集或测试集上误差减小。")],-1),B=t("p",null,[e("因此在深度学习中，我们不仅需要考虑优化算法的收敛性，还需要考虑优化算法的泛化性，防止"),t("strong",null,"过拟合"),e("。")],-1),N=t("div",{class:"flex flex-wrap justify-center gap-4"},[t("img",{src:x,class:"h-60 rounded"})],-1),P={__name:"6",setup(V){return f(s),g(),(j,k)=>{const n=r;return a(),i(d,c(m(o(h)(o(s),5))),{default:_(()=>[v,w,z,B,t("p",null,[e("然而训练数据集的最小经验风险可能与最小风险（泛化误差）不同"),l(n)]),p(" center "),N]),_:1},16)}}},q=u(P,[["__file","/@slidev/slides/6.md"]]);export{q as default};
